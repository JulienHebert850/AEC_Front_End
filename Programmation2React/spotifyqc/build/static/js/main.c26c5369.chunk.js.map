{"version":3,"sources":["img/LogoSpotifyQc.png","img/PierreLapointeEnnui.jpg","img/PierreLapointePunkt.jpg","img/PierreLapointeScienceCoeur.jpg","img/PierreLapointeForetDesMalAimes.jpg","img/SRVBluesYouCanUse.jpg","img/SRVStandTheWeather.jpg","img/SRVTexasFlood.jpg","img/SRVCompleteEpicRecordings.jpg","serviceWorker.js","components/Album/Album.js","components/Chansons/Chansons.js","components/Catalogue/Catalogue.js","components/Connexion/Connexion.js","components/Deconnexion/Deconnexion.js","components/Accueil/Accueil.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Album","props","state","hovered","Col","xs","lg","src","this","alt","title","className","onMouseOut","setState","onMouseOver","style","transform","titrealbum","artiste","React","Component","Chansons","chanson1","tabAlbums","require","chanson2","chanson3","chanson4","chanson5","chanson6","chanson7","chanson8","chanson9","chanson10","chanson11","chanson12","Catalogue","rechercher","Rechercher","bind","Effacer","nom","document","getElementById","value","Container","fluid","Row","Form","InputGroup","FormControl","id","placeholder","aria-label","aria-describedby","onChange","Append","Button","variant","onClick","AfficherAlbums","map","element","i","key","filter","l","toLowerCase","includes","console","log","Connexion","handleConnexion","connecter","user","pass","Jumbotron","logo","width","Group","controlId","Label","Control","type","inline","Check","label","size","Deconnexion","handleDeconnexion","Accueil","gererConnexion","verifierConnexion","connexion","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c26c5369.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LogoSpotifyQc.656f1218.png\";","module.exports = __webpack_public_path__ + \"static/media/PierreLapointeEnnui.496d06f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PierreLapointePunkt.8079851e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PierreLapointeScienceCoeur.fc7f1198.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PierreLapointeForetDesMalAimes.32fb0528.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SRVBluesYouCanUse.ef793653.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SRVStandTheWeather.764271f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SRVTexasFlood.74f4a59a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SRVCompleteEpicRecordings.b7bcc3ab.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n\r\nexport class Album extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {hovered: false};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xs lg=\"2\">\r\n            <img\r\n                src={this.props.src}\r\n                alt={this.props.alt}\r\n                title={this.props.title}\r\n                className=\"img-fluid\"\r\n                onMouseOut={() => this.setState({ hovered: false})}\r\n                onMouseOver={() => this.setState({ hovered: true})}\r\n                style={{\r\n                  transform: `${\r\n                   this.state.hovered ? \"scale(1.5,1.5)\" : \"scale(1,1)\" \r\n                  }`,\r\n                }}\r\n            />\r\n            <h5>{this.props.titrealbum}</h5>\r\n            <p>{this.props.artiste}</p>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n\r\n    export class Chansons extends React.Component {  \r\n        \r\n      \r\n        render() {  \r\n            return (  \r\n              <h5>{this.props.chanson1}</h5>\r\n                    )\r\n                };\r\n            }","import React from 'react';\r\nimport {Album} from '../Album/Album';\r\nimport {Chansons} from '../Chansons/Chansons';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst tabAlbums = [\r\n  {\r\n    src: require(\"../../img/PierreLapointeEnnui.jpg\"),\r\n    alt: \"Pierre Lapointe\",\r\n    title: \"Pierre Lapointe\",\r\n    artiste: \"Pierre Lapointe\",\r\n    titrealbum: \"Pour déjouer l'ennui\",\r\n    chanson1: \"Tatouage\",\r\n    chanson2: \"La plus belle des maisons\",\r\n    chanson3: \"Pour déjouer l'ennui\",\r\n    chanson4: \"Un coeur qui saigne\",\r\n    chanson5: \"Le monarque des indes\",\r\n    chanson6: \"Amour bohème\",\r\n    chanson7: \"Amour ou songe\",\r\n    chanson8: \"Dis-moi je ne sais pas\",\r\n    chanson9: \"Je connais le chemin\",\r\n    chanson10: \"Vivre ma peine\",\r\n    chanson11: \"Qu'est ce qu'on y peut\",\r\n    chanson12: \"Vendredi 13\",\r\n  },\r\n  {\r\n    src: require(\"../../img/PierreLapointePunkt.jpg\"),\r\n    alt: \"Pierre Lapointe\",\r\n    title: \"Pierre Lapointe\",\r\n    artiste: \"Pierre Lapointe\",\r\n    titrealbum: \"Punkt\",\r\n  },\r\n  {\r\n    src: require(\"../../img/PierreLapointeScienceCoeur.jpg\"),\r\n    alt: \"Pierre Lapointe\",\r\n    title: \"Pierre Lapointe\",\r\n    artiste: \"Pierre Lapointe\",\r\n    titrealbum: \"La science du coeur\",\r\n  },\r\n  {\r\n    src: require(\"../../img/PierreLapointeForetDesMalAimes.jpg\"),\r\n    alt: \"Pierre Lapointe\",\r\n    title: \"Pierre Lapointe\",\r\n    artiste: \"Pierre Lapointe\",\r\n    titrealbum: \"La foret des mal aimés\",\r\n  },\r\n  {\r\n    src: require(\"../../img/SRVBluesYouCanUse.jpg\"),\r\n    alt: \"SRV\",\r\n    title: \"SRV\",\r\n    artiste: \"Stevie Ray Vaughan\",\r\n    titrealbum: \"Blues you can use\",\r\n  },\r\n  {\r\n    src: require(\"../../img/SRVStandTheWeather.jpg\"),\r\n    alt: \"SRV\",\r\n    title: \"SRV\",\r\n    artiste: \"Stevie Ray Vaughan\",\r\n    titrealbum: \"Couldn't stand the weather\",\r\n  },\r\n  {\r\n    src: require(\"../../img/SRVTexasFlood.jpg\"),\r\n    alt: \"SRV\",\r\n    title: \"SRV\",\r\n    artiste: \"Stevie Ray Vaughan\",\r\n    titrealbum: \"Texas Flood\",\r\n  },\r\n  {\r\n    src: require(\"../../img/SRVCompleteEpicRecordings.jpg\"),\r\n    alt: \"SRV\",\r\n    title: \"SRV\",\r\n    artiste: \"Stevie Ray Vaughan\",\r\n    titrealbum: \"The complete epic recordings collection\",\r\n  },\r\n];\r\n\r\nexport class Catalogue extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {rechercher:\"\"};\r\n    this.Rechercher = this.Rechercher.bind(this);\r\n    this.Effacer = this.Effacer.bind(this);\r\n  }\r\n  Rechercher(){\r\n    let nom = document.getElementById(\"inputRechercher\").value;\r\n    this.setState({rechercher:nom});\r\n  }\r\n  Effacer(){\r\n    document.getElementById(\"inputRechercher\").value = \"\";\r\n    this.setState({rechercher:\"\"});\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n  \r\n      <Container fluid>\r\n          <Row>\r\n            <Form>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  id=\"inputRechercher\"\r\n                  placeholder=\"Rechercher\"\r\n                  aria-label=\"Rechercher\"\r\n                  aria-describedby=\"Rechercher\"\r\n                  onChange={this.Rechercher}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button variant=\"outline-secondary\" onClick={this.Rechercher}>Rechercher</Button>\r\n                </InputGroup.Append>\r\n                <InputGroup.Append>\r\n                  <Button variant=\"outline-secondary\" onClick={this.Effacer}>Annuler</Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Form>\r\n          </Row>\r\n          <Row>\r\n          <h1>Albums</h1>\r\n          <h5>{this.props.chanson1}</h5>\r\n          <Chansons/>\r\n          </Row>\r\n          <Row>\r\n          {this.AfficherAlbums()}\r\n          </Row>\r\n        </Container>\r\n      );\r\n  }        \r\n\r\n\r\n\r\nAfficherAlbums() {\r\n\r\n  if(this.state.rechercher === \"\"){\r\n    return tabAlbums.map((element, i) => (\r\n      <Album\r\n        key={\"album\" +i}\r\n        src={element.src}\r\n        alt={element.alt}\r\n        title={element.title}\r\n        artiste={element.artiste}\r\n        titrealbum={element.titrealbum}\r\n      ></Album>\r\n    ));\r\n  } else {\r\n    const searchResult = this.state.tabAlbums.filter(l => l.nom.toLowerCase().includes(this.state.rechercher.toLowerCase()));\r\n    return searchResult.map((element, i) => (\r\n      <Album\r\n        key={\"album\" +i}\r\n        src={element.src}\r\n        alt={element.alt}\r\n        title={element.title}\r\n        artiste={element.artiste}\r\n        titrealbum={element.titrealbum}\r\n      ></Album>\r\n      ));\r\n    }\r\n  }\r\n}\r\n\r\nconsole.log(tabAlbums);","import React from 'react'; \r\nimport logo from '../../img/LogoSpotifyQc.png';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from 'react-bootstrap/Container';  \r\nimport Row from 'react-bootstrap/Row';  \r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport class Connexion extends React.Component {  \r\n    constructor(props){\r\n        super(props);\r\n        this.handleConnexion = this.handleConnexion.bind(this);\r\n    }\r\n    handleConnexion(){\r\n        let connecter = false;\r\n\r\n            let user = document.getElementById(\"user\").value;\r\n            let pass = document.getElementById(\"pass\").value;\r\n\r\n            if (user.toLowerCase() === \"shany.carle@gmail.com\" && pass === \"patate\"){ \r\n                connecter = true;\r\n            }\r\n\r\n        this.props.onClick(connecter);    \r\n    }\r\n\r\n    render() {\r\n       return (\r\n        <Container>\r\n            <Jumbotron>\r\n                <Row className=\"text-center\">\r\n                    <Col>\r\n                        <h1>Connexion Spotify Québec</h1>\r\n                        <img src={logo} alt=\"Logo SpotifyQc\" width=\"400px\" className=\"text-center\"/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form>\r\n\r\n                        <Form.Group controlId=\"user\">\r\n                            <Form.Label>Nom d'utilisateur</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Nom d'utilisateur ou adresse courriel\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"pass\">\r\n                            <Form.Label>Mot de passe</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Mot de passe\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form inline>  \r\n                                <Form.Check \r\n                                    type=\"switch\"\r\n                                    id=\"custom-switch\"\r\n                                    label=\"Garder ma session ouverte\"\r\n                                />               \r\n                            </Form>\r\n                        </Form.Group>\r\n\r\n                            <Button variant=\"success\" size=\"lg\" onClick={this.handleConnexion}>\r\n                                    Se connecter\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    </Col>  \r\n                </Row>\r\n            </Jumbotron>\r\n        </Container>\r\n       );\r\n    }  \r\n}  ","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport class Deconnexion extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n        this.handleDeconnexion = this.handleDeconnexion.bind(this);\r\n    }\r\n\r\n  handleDeconnexion() {\r\n    this.props.onClick();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Button variant=\"primary\" onClick={this.handleDeconnexion}>\r\n        Déconnexion\r\n      </Button>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\"; \r\nimport {Catalogue} from '../Catalogue/Catalogue';\r\nimport {Connexion} from '../Connexion/Connexion';\r\nimport {Deconnexion} from '../Deconnexion/Deconnexion';\r\n\r\n\r\n\r\n\r\nexport class Accueil extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {connecter: false};\r\n        this.gererConnexion = this.gererConnexion.bind(this);\r\n        this.verifierConnexion = this.verifierConnexion.bind(this);\r\n    }\r\n\r\n    verifierConnexion(connexion){\r\n        this.setState({ connecter: connexion });\r\n    }\r\n\r\n    gererConnexion(){\r\n        if(this.state.connecter===true){\r\n            return(\r\n                <Catalogue /> \r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Connexion onClick={this.verifierConnexion} />\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n      return (\r\n          <Container fluid>\r\n              <Row>\r\n                  <Col>\r\n                    <Deconnexion/>\r\n                  </Col>\r\n              </Row>\r\n              \r\n                {this.gererConnexion()}\r\n            </Container> \r\n        );\r\n    }\r\n}\r\n    \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport {Accueil} from '../src/components/Accueil/Accueil'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <Container fluid>\n      <Accueil /> \n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}